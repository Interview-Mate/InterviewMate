{
  "compilerOptions": {

    /* Language and Environment */
    "target": "es2016",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    //! "lib": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    // "jsx": "preserve",                                /* Specify what JSX code is generated. */
    //! "experimentalDecorators": true,                   /* Enable experimental support for legacy experimental decorators. */
     // "reactNamespace": "",                             /* Specify the object invoked for 'createElement'. This only applies when targeting 'react' JSX emit. */
    // "noLib": true,                                    /* Disable including any library files, including the default lib.d.ts. */

    /* Modules */
    "module": "commonjs",                                /* Specify what module code is generated. */
    //! "rootDir": "./",                                  /* Specify the root folder within your source files. */
    //! "moduleResolution": "node10",                     /* Specify how TypeScript looks up a file from a given module specifier. */
    //! "baseUrl": "./",                                  /* Specify the base directory to resolve non-relative module names. */
    // "paths": {},                                      /* Specify a set of entries that re-map imports to additional lookup locations. */
    // "rootDirs": [],                                   /* Allow multiple folders to be treated as one when resolving modules. */
     "typeRoots": ["node_modules/@types", "/typings"],     /* Specify multiple folders that act like './node_modules/@types'. */
    //! "types": ["node"],                                   /* Specify type package names to be included without being referenced in a source file. */

    /* JavaScript Support */
    //! "allowJs": true,                                  /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */
    //! "checkJs": true,                                  /* Enable error reporting in type-checked JavaScript files. */

    /* Emit */
    // "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */
    // "outFile": "./",                                  /* Specify a file that bundles all outputs into one JavaScript file. If 'declaration' is true, also designates a file that bundles all .d.ts output. */
     "outDir": "./dist",                                   /* Specify an output folder for all emitted files. */
    //! "removeComments": true,                           /* Disable emitting comments. */
    //! "sourceRoot": "./",                                 /* Specify the root path for debuggers to find the reference source code. */
    // "mapRoot": "",                                    /* Specify the location where debugger should locate map files instead of generated locations. */

    /* Interop Constraints */
    //! "allowSyntheticDefaultImports": true,             /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,                                      /* Enable all strict type-checking options. */
    //! "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    //! "strictNullChecks": true,                         /* When type checking, take into account 'null' and 'undefined'. */

    /* Completeness */
    "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
  },
  "include": [
    "./src/**/*.ts",
    "*.ts"
   ],
  "exclude": [
    "node_modules",
    "**/*.spec.ts",

    "./node_modules",
    "./node_modules/*",
    "./node_modules/@types/node/index.d.ts",
  ]
}


